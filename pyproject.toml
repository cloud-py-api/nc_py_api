[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling>=1.18",
]

[project]
name = "nc-py-api"
description = "Nextcloud Python Framework"
readme = "README.md"
keywords = [
  "api",
  "client",
  "framework",
  "library",
  "nextcloud",
]
license = "BSD-3-Clause"
authors = [
    { name = "Alexander Piskun", email = "bigcat88@icloud.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [
  "version",
]
dependencies = [
  "fastapi>=0.101",
  "httpx>=0.24.1",
  "pydantic>=2.1.1",
  "python-dotenv>=1",
  "requests>=2.31",
  "xmltodict>=0.13",
]
[project.optional-dependencies]
app = [
  "uvicorn[standard]>=0.23.2",
]
bench = [
  "matplotlib",
  "nc_py_api[app]",
  "numpy",
  "py-cpuinfo",
]
calendar = [
  "caldav==1.3.6",
]
dev = [
  "nc_py_api[bench,calendar,dev-min]",
]
dev-min = [
  "coverage",
  "huggingface_hub",
  "pillow",
  "pre-commit",
  "pylint",
  "pytest",
  "selenium",
]
docs = [
  "autodoc_pydantic>=2.0.1",
  "nc_py_api[app,calendar]",
  "sphinx>=6.2",
  "sphinx-copybutton",
  "sphinx-inline-tabs",
  "sphinx-issues>=3.0.1",
  "sphinx-rtd-theme>=1",
]
[project.urls]
Changelog = "https://github.com/cloud-py-api/nc_py_api/blob/main/CHANGELOG.md"
Documentation = "https://cloud-py-api.github.io/nc_py_api/"
Source = "https://github.com/cloud-py-api/nc_py_api"

[tool.hatch.version]
path = "nc_py_api/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/nc_py_api",
    "/CHANGELOG.md",
    "/README.md",
]
exclude = [
    "Makefile",
]

[tool.black]
line-length = 120
target-versions = ["py39"]
preview = true

[tool.ruff]
line-length = 120
target-version = "py39"
select = ["A", "B", "C", "D", "E", "F", "G", "I", "S", "SIM", "PIE", "Q", "RET", "RUF", "UP" , "W"]
extend-ignore = ["D107", "D105", "D203", "D213", "D401", "I001", "RUF100"]

[tool.ruff.per-file-ignores]
"nc_py_api/__init__.py" = ["F401"]
"nc_py_api/ex_app/__init__.py" = ["F401"]

[tool.ruff.extend-per-file-ignores]
"benchmarks/**/*.py" = ["D"]
"docs/**/*.py" = ["D"]
"examples/**/*.py" = ["D", "S106"]
"tests/**/*.py" = ["D", "E402", "S", "UP"]

[tool.ruff.mccabe]
max-complexity = 16

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli = true
addopts = "-rs --color=yes"
markers = [
    "require_nc: marks a test that requires a minimum version of Nextcloud.",
]

[tool.coverage.run]
cover_pylib = true
include = ["*/nc_py_api/*"]
omit = ["*/tests/*"]

[tool.coverage.paths]
source = [
    "nc_py_api/",
    "*/site-packages/nc_py_api/"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "DeprecationWarning",
    "DEPRECATED"
]

[tool.mypy]
ignore_missing_imports = false
warn_unreachable = true
warn_no_return = true
strict_optional = true
check_untyped_defs = true
show_error_codes = true

[tool.pylint]
master.py-version = "3.9"
master.extension-pkg-allow-list = ["pydantic"]
design.max-attributes = 8
design.max-locals = 16
design.max-branches = 16
design.max-returns = 8
design.max-args = 7
basic.good-names = [
    "a", "b", "c", "d", "e", "f", "i", "j", "k", "r", "v",
    "ex", "_", "fp", "im", "nc", "ui",
]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "too-few-public-methods",
    "too-many-public-methods",
]
